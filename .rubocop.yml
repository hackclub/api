AllCops:
  TargetRubyVersion: 2.3
  Exclude:
    # This file is autogenerated by Rails, we shouldn't worry about changing its
    # format.
    - 'db/schema.rb'
    # Some people may choose to install gems into vendor/bundle/, which will
    # break Rubocop. Ignore it.
    - 'vendor/**/*'
    - 'bundler_cache/**/*'

# Disable line length checks
Metrics/LineLength:
  Enabled: false

# Disable class length checks
Metrics/ClassLength:
  Enabled: false

# Disable method length checks
Metrics/MethodLength:
  Enabled: false

# Disable block length checks
Metrics/BlockLength:
  Enabled: false

# Disable Assignment Branch Condition size check
Metrics/AbcSize:
  Enabled: false

# Disable check for methods requiring more than 5 parameters.
Metrics/ParameterLists:
  Enabled: false

# Disable check for cyclomatic complexity. While we'll certainly have to
# refactor our code as we code, it's just a nuisance right now.
Metrics/CyclomaticComplexity:
  Enabled: false

# Same deal as above, except for perceived complexity.
Metrics/PerceivedComplexity:
  Enabled: false

# Disable for built-in Rails scripts in bin/ because it breaks them.
Style/MixinUsage:
  Exclude:
    - 'bin/**/*'

# Don't worry about having top-level class documentation comments for every
# class. It'd be a nuisance to do this on all of the generated Rails classes.
Documentation:
  Enabled: false

# Exclude all tests from this check beacuse this makes a core part of Rspec's
# DSL ugly.
#
# Example: the following test would  be invalid with this check enabled.
#
#   expect { User.create }.to change { User.count }.by 1
#
Lint/AmbiguousBlockAssociation:
  Exclude:
    - 'spec/**/*'

# Run those Rails cops!
Rails:
  Enabled: true

# Disable preference for has_many :through over has_and_belongs_to_many. They're
# different types of relationships and Rails attaches different helper methods
# for each, not sure why Rubocop has a preference for this by default.
Rails/HasAndBelongsToMany:
  Enabled: false

# Disable inverse_of check because it's automatically implicitly added in recent
# Rails versions
Rails/InverseOf:
  Enabled: false

# Don't force :dependent to be specified beacuse :nullify is a sane default.
Rails/HasManyOrHasOneDependent:
  Enabled: false

# Don't force usage of ApplicationRecord instead of ActiveRecord::Base in Rails
# migrations because migrations shouldn't depend on application code.
Rails/ApplicationRecord:
  Exclude:
    - 'db/migrate/**'
